#include "devCircularBuffer.h"
//---------------------------------------------------------------------------------------



//---------------------------------------------------------------------------------------







/* //===================================================================================*
* //                                                                                    *
* // Constructor																		*
* //------------------------------------------------------------------------------------*
*///
ACircularBuffer :: ACircularBuffer()
	:
	m_indexBegin(0),
	m_indexEnd(0)
{
	
}
//---------------------------------------------------------------------------------------









/* //===================================================================================*
* //                                                                                    *
* // очистить очередь																	*
* //------------------------------------------------------------------------------------*
*///
void ACircularBuffer :: clear()
{
	m_indexBegin = 0;
	m_indexEnd = 0;
}
//---------------------------------------------------------------------------------------






/* //===================================================================================*
* //                                                                                    *
* // Запихнем данные в конец очереди													*
* //------------------------------------------------------------------------------------*
*///
bool ACircularBuffer :: push_back(const BYTE data)
{
	if (m_indexEnd >= MAX_CIRCULAR_BUFFER)
	{
		if (!m_indexBegin)
		{
			return false;
		}			
		m_indexEnd = 0;
	}
	
	
	m_buffer[m_indexEnd] = data;
	m_indexEnd++;
	return true;
}
//---------------------------------------------------------------------------------------




	